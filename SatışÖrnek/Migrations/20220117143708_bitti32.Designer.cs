// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SatışÖrnek.Models;

namespace SatışÖrnek.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220117143708_bitti32")]
    partial class bitti32
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SatışÖrnek.Models.Ders", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DersAdı")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DersId");

                    b.ToTable("Ders");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Kulup", b =>
                {
                    b.Property<int>("KulupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KulupAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KulupKontejan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KulupId");

                    b.ToTable("Kulup");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Notlar", b =>
                {
                    b.Property<int>("NotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<decimal>("Ortalama")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Proje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sınav1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sınav2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sınav3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotId");

                    b.HasIndex("DersId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("Notlar");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Ogrenci", b =>
                {
                    b.Property<int>("OgrenciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("KulupId")
                        .HasColumnType("int");

                    b.Property<string>("OgrenciAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenciKulup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenciSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrencıCınsıyet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgrenciId");

                    b.HasIndex("DersId");

                    b.HasIndex("KulupId");

                    b.ToTable("Ogrencıs");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Notlar", b =>
                {
                    b.HasOne("SatışÖrnek.Models.Ders", "Ders")
                        .WithMany("Notlar")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SatışÖrnek.Models.Ogrenci", "Ogrenci")
                        .WithMany("Notlar")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Ogrenci", b =>
                {
                    b.HasOne("SatışÖrnek.Models.Ders", "Ders")
                        .WithMany("Ogrenci")
                        .HasForeignKey("DersId");

                    b.HasOne("SatışÖrnek.Models.Kulup", "Kulup")
                        .WithMany("Ogrencı")
                        .HasForeignKey("KulupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Kulup");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Ders", b =>
                {
                    b.Navigation("Notlar");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Kulup", b =>
                {
                    b.Navigation("Ogrencı");
                });

            modelBuilder.Entity("SatışÖrnek.Models.Ogrenci", b =>
                {
                    b.Navigation("Notlar");
                });
#pragma warning restore 612, 618
        }
    }
}
